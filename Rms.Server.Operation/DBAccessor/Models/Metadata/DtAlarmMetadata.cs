//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Operation.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// DtAlarmクラス
    /// </summary>
    [ModelMetadataType(typeof(DtAlarmModelMetaData))]
    public partial class DtAlarm
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DtAlarm()
        {
        }
    
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Rms.Server.Operation.Utility.Models.DtAlarmのインスタンス</param>
        public DtAlarm(Rms.Server.Operation.Utility.Models.DtAlarm model)
        {
            this.Sid = model.Sid;
            this.EquipmentSid = model.EquipmentSid;
            this.TypeCode = model.TypeCode;
            this.ErrorCode = model.ErrorCode;
            this.AlarmLevel = model.AlarmLevel;
            this.AlarmTitle = model.AlarmTitle;
            this.AlarmDescription = model.AlarmDescription;
            this.AlarmDatetime = model.AlarmDatetime;
            this.AlarmDefId = model.AlarmDefId;
            this.EventDatetime = model.EventDatetime;
            this.HasMail = model.HasMail;
            this.MessageId = model.MessageId;
            this.CreateDatetime = model.CreateDatetime;
            this.EquipmentS = new DtEquipment(model.DtEquipment);
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたDtAlarmのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のDtAlarm</param>
        public void CopyFrom(DtAlarm entity)
        {
            this.Sid = entity.Sid;
            this.EquipmentSid = entity.EquipmentSid;
            this.TypeCode = entity.TypeCode;
            this.ErrorCode = entity.ErrorCode;
            this.AlarmLevel = entity.AlarmLevel;
            this.AlarmTitle = entity.AlarmTitle;
            this.AlarmDescription = entity.AlarmDescription;
            this.AlarmDatetime = entity.AlarmDatetime;
            this.AlarmDefId = entity.AlarmDefId;
            this.EventDatetime = entity.EventDatetime;
            this.HasMail = entity.HasMail;
            this.MessageId = entity.MessageId;
            this.CreateDatetime = entity.CreateDatetime;
            this.EquipmentS = entity.EquipmentS;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なRms.Server.Operation.Utility.Models.DtAlarm型に変換する。
        /// </summary>
        /// <returns></returns>
        public Rms.Server.Operation.Utility.Models.DtAlarm ToModel()
        {
            Rms.Server.Operation.Utility.Models.DtAlarm model = new Rms.Server.Operation.Utility.Models.DtAlarm();
            model.Sid = this.Sid;
            model.EquipmentSid = this.EquipmentSid;
            model.TypeCode = this.TypeCode;
            model.ErrorCode = this.ErrorCode;
            model.AlarmLevel = this.AlarmLevel;
            model.AlarmTitle = this.AlarmTitle;
            model.AlarmDescription = this.AlarmDescription;
            model.AlarmDatetime = this.AlarmDatetime;
            model.AlarmDefId = this.AlarmDefId;
            model.EventDatetime = this.EventDatetime;
            model.HasMail = this.HasMail;
            model.MessageId = this.MessageId;
            model.CreateDatetime = this.CreateDatetime;
            model.DtEquipment = this.EquipmentS.ToModel();
    
            return model;
        }
    }
    
    /// <summary>
    /// DtAlarmのメタデータクラス
    /// </summary>
    public  class DtAlarmModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "EquipmentSid is required.")]
        public long EquipmentSid { get; set; }
    
        [StringLength(30, ErrorMessage = "TypeCode length should be less than 30 symbols.")]
        [RegularExpression(@"^[\x20-\x7e]+$", ErrorMessage = "TypeCode is only allowed for ASCII code characters.")]
        public string TypeCode { get; set; }
    
        [StringLength(20, ErrorMessage = "ErrorCode length should be less than 20 symbols.")]
        [RegularExpression(@"^[\x20-\x7e]+$", ErrorMessage = "ErrorCode is only allowed for ASCII code characters.")]
        public string ErrorCode { get; set; }
    
        [StringLength(200, ErrorMessage = "AlarmTitle length should be less than 200 symbols.")]
        public string AlarmTitle { get; set; }
    
        [StringLength(1024, ErrorMessage = "AlarmDescription length should be less than 1024 symbols.")]
        public string AlarmDescription { get; set; }
    
        [StringLength(10, ErrorMessage = "AlarmDefId length should be less than 10 symbols.")]
        public string AlarmDefId { get; set; }
    
        [StringLength(64, ErrorMessage = "MessageId length should be less than 64 symbols.")]
        [RegularExpression(@"^[\x20-\x7e]+$", ErrorMessage = "MessageId is only allowed for ASCII code characters.")]
        public string MessageId { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
    }
}
