//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Operation.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// DtAlarmConfigクラス
    /// </summary>
    [ModelMetadataType(typeof(DtAlarmConfigModelMetaData))]
    public partial class DtAlarmConfig
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DtAlarmConfig()
        {
        }
    
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Rms.Server.Operation.Utility.Models.DtAlarmConfigのインスタンス</param>
        public DtAlarmConfig(Rms.Server.Operation.Utility.Models.DtAlarmConfig model)
        {
            this.Sid = model.Sid;
            this.AlarmLevelFrom = model.AlarmLevelFrom;
            this.AlarmLevelTo = model.AlarmLevelTo;
            this.MailAddress = model.MailAddress;
            this.MailSendingInterval = model.MailSendingInterval;
            this.Description = model.Description;
            this.CreateDatetime = model.CreateDatetime;
            this.UpdateDatetime = model.UpdateDatetime;
            this.RowVersion = model.RowVersion;
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたDtAlarmConfigのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のDtAlarmConfig</param>
        public void CopyFrom(DtAlarmConfig entity)
        {
            this.Sid = entity.Sid;
            this.AlarmLevelFrom = entity.AlarmLevelFrom;
            this.AlarmLevelTo = entity.AlarmLevelTo;
            this.MailAddress = entity.MailAddress;
            this.MailSendingInterval = entity.MailSendingInterval;
            this.Description = entity.Description;
            this.CreateDatetime = entity.CreateDatetime;
            this.UpdateDatetime = entity.UpdateDatetime;
            this.RowVersion = entity.RowVersion;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なRms.Server.Operation.Utility.Models.DtAlarmConfig型に変換する。
        /// </summary>
        /// <returns></returns>
        public Rms.Server.Operation.Utility.Models.DtAlarmConfig ToModel()
        {
            Rms.Server.Operation.Utility.Models.DtAlarmConfig model = new Rms.Server.Operation.Utility.Models.DtAlarmConfig();
            model.Sid = this.Sid;
            model.AlarmLevelFrom = this.AlarmLevelFrom;
            model.AlarmLevelTo = this.AlarmLevelTo;
            model.MailAddress = this.MailAddress;
            model.MailSendingInterval = this.MailSendingInterval;
            model.Description = this.Description;
            model.CreateDatetime = this.CreateDatetime;
            model.UpdateDatetime = this.UpdateDatetime;
            model.RowVersion = this.RowVersion;
    
            return model;
        }
    }
    
    /// <summary>
    /// DtAlarmConfigのメタデータクラス
    /// </summary>
    public  class DtAlarmConfigModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "AlarmLevelFrom is required.")]
        public byte AlarmLevelFrom { get; set; }
    
        [Required(ErrorMessage = "AlarmLevelTo is required.")]
        public byte AlarmLevelTo { get; set; }
    
        [Required(ErrorMessage = "MailAddress is required.")]
        [StringLength(1024, ErrorMessage = "MailAddress length should be less than 1024 symbols.")]
        [RegularExpression(@"^[\x20-\x7e]+$", ErrorMessage = "MailAddress is only allowed for ASCII code characters.")]
        public string MailAddress { get; set; }
    
        [StringLength(1024, ErrorMessage = "Description length should be less than 1024 symbols.")]
        public string Description { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
        [Required(ErrorMessage = "UpdateDatetime is required.")]
        public System.DateTime UpdateDatetime { get; set; }
    
        [Required(ErrorMessage = "RowVersion is required.")]
        [MaxLength(8, ErrorMessage = "RowVersion length should be less than 8 elements.")]
        public byte[] RowVersion { get; set; }
    
    }
}
