//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Utility.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// DtAlmilogAnalysisResultクラス
    /// </summary>
    [ModelMetadataType(typeof(DtAlmilogAnalysisResultModelMetaData))]
    public partial class DtAlmilogAnalysisResult
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DtAlmilogAnalysisResult()
        {
        }
    
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisResultのインスタンス</param>
        public DtAlmilogAnalysisResult(Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisResult model)
        {
            this.Sid = model.Sid;
            this.EquipmentUid = model.EquipmentUid;
            this.AnalysisResult = model.AnalysisResult;
            this.CalculateInclinationValue = model.CalculateInclinationValue;
            this.CalculateAreaValue = model.CalculateAreaValue;
            this.MaxInclinationValue = model.MaxInclinationValue;
            this.MinInclinationValue = model.MinInclinationValue;
            this.StandardAreaValue = model.StandardAreaValue;
            this.AlmilogMonth = model.AlmilogMonth;
            this.DetectorName = model.DetectorName;
            this.DetectorId = model.DetectorId;
            this.GpValue = model.GpValue;
            this.ImageFileName = model.ImageFileName;
            this.FileNameNo = model.FileNameNo;
            this.ReverseResult = model.ReverseResult;
            this.ReverseResultInclination = model.ReverseResultInclination;
            this.IsAlarmJudged = model.IsAlarmJudged;
            this.IsBillTarget = model.IsBillTarget;
            this.LogFileName = model.LogFileName;
            this.CreateDatetime = model.CreateDatetime;
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたDtAlmilogAnalysisResultのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のDtAlmilogAnalysisResult</param>
        public void CopyFrom(DtAlmilogAnalysisResult entity)
        {
            this.Sid = entity.Sid;
            this.EquipmentUid = entity.EquipmentUid;
            this.AnalysisResult = entity.AnalysisResult;
            this.CalculateInclinationValue = entity.CalculateInclinationValue;
            this.CalculateAreaValue = entity.CalculateAreaValue;
            this.MaxInclinationValue = entity.MaxInclinationValue;
            this.MinInclinationValue = entity.MinInclinationValue;
            this.StandardAreaValue = entity.StandardAreaValue;
            this.AlmilogMonth = entity.AlmilogMonth;
            this.DetectorName = entity.DetectorName;
            this.DetectorId = entity.DetectorId;
            this.GpValue = entity.GpValue;
            this.ImageFileName = entity.ImageFileName;
            this.FileNameNo = entity.FileNameNo;
            this.ReverseResult = entity.ReverseResult;
            this.ReverseResultInclination = entity.ReverseResultInclination;
            this.IsAlarmJudged = entity.IsAlarmJudged;
            this.IsBillTarget = entity.IsBillTarget;
            this.LogFileName = entity.LogFileName;
            this.CreateDatetime = entity.CreateDatetime;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なRms.Server.Utility.Utility.Models.DtAlmilogAnalysisResult型に変換する。
        /// </summary>
        /// <returns></returns>
        public Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisResult ToModel()
        {
            Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisResult model = new Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisResult();
            model.Sid = this.Sid;
            model.EquipmentUid = this.EquipmentUid;
            model.AnalysisResult = this.AnalysisResult;
            model.CalculateInclinationValue = this.CalculateInclinationValue;
            model.CalculateAreaValue = this.CalculateAreaValue;
            model.MaxInclinationValue = this.MaxInclinationValue;
            model.MinInclinationValue = this.MinInclinationValue;
            model.StandardAreaValue = this.StandardAreaValue;
            model.AlmilogMonth = this.AlmilogMonth;
            model.DetectorName = this.DetectorName;
            model.DetectorId = this.DetectorId;
            model.GpValue = this.GpValue;
            model.ImageFileName = this.ImageFileName;
            model.FileNameNo = this.FileNameNo;
            model.ReverseResult = this.ReverseResult;
            model.ReverseResultInclination = this.ReverseResultInclination;
            model.IsAlarmJudged = this.IsAlarmJudged;
            model.IsBillTarget = this.IsBillTarget;
            model.LogFileName = this.LogFileName;
            model.CreateDatetime = this.CreateDatetime;
    
            return model;
        }
    }
    
    /// <summary>
    /// DtAlmilogAnalysisResultのメタデータクラス
    /// </summary>
    public  class DtAlmilogAnalysisResultModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "EquipmentUid is required.")]
        [StringLength(30, ErrorMessage = "EquipmentUid length should be less than 30 symbols.")]
        public string EquipmentUid { get; set; }
    
        [StringLength(8, ErrorMessage = "AnalysisResult length should be less than 8 symbols.")]
        public string AnalysisResult { get; set; }
    
        [StringLength(6, ErrorMessage = "AlmilogMonth length should be less than 6 symbols.")]
        public string AlmilogMonth { get; set; }
    
        [StringLength(16, ErrorMessage = "DetectorName length should be less than 16 symbols.")]
        public string DetectorName { get; set; }
    
        [StringLength(64, ErrorMessage = "DetectorId length should be less than 64 symbols.")]
        public string DetectorId { get; set; }
    
        [StringLength(32, ErrorMessage = "ImageFileName length should be less than 32 symbols.")]
        public string ImageFileName { get; set; }
    
        [StringLength(8, ErrorMessage = "ReverseResult length should be less than 8 symbols.")]
        public string ReverseResult { get; set; }
    
        [StringLength(64, ErrorMessage = "LogFileName length should be less than 64 symbols.")]
        public string LogFileName { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
    }
}
