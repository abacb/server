//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Utility.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// DtAlmilogAnalysisConfigクラス
    /// </summary>
    [ModelMetadataType(typeof(DtAlmilogAnalysisConfigModelMetaData))]
    public partial class DtAlmilogAnalysisConfig
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DtAlmilogAnalysisConfig()
        {
        }
    
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisConfigのインスタンス</param>
        public DtAlmilogAnalysisConfig(Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisConfig model)
        {
            this.Sid = model.Sid;
            this.DetectorName = model.DetectorName;
            this.IsNormalized = model.IsNormalized;
            this.MinSlopeValue = model.MinSlopeValue;
            this.MiddleSlopeValue = model.MiddleSlopeValue;
            this.MaxSlopeValue = model.MaxSlopeValue;
            this.LowVoltageAreaValue = model.LowVoltageAreaValue;
            this.HighVoltageAreaValue = model.HighVoltageAreaValue;
            this.AreaStandardData = model.AreaStandardData;
            this.CreateDatetime = model.CreateDatetime;
            this.UpdateDatetime = model.UpdateDatetime;
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたDtAlmilogAnalysisConfigのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のDtAlmilogAnalysisConfig</param>
        public void CopyFrom(DtAlmilogAnalysisConfig entity)
        {
            this.Sid = entity.Sid;
            this.DetectorName = entity.DetectorName;
            this.IsNormalized = entity.IsNormalized;
            this.MinSlopeValue = entity.MinSlopeValue;
            this.MiddleSlopeValue = entity.MiddleSlopeValue;
            this.MaxSlopeValue = entity.MaxSlopeValue;
            this.LowVoltageAreaValue = entity.LowVoltageAreaValue;
            this.HighVoltageAreaValue = entity.HighVoltageAreaValue;
            this.AreaStandardData = entity.AreaStandardData;
            this.CreateDatetime = entity.CreateDatetime;
            this.UpdateDatetime = entity.UpdateDatetime;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なRms.Server.Utility.Utility.Models.DtAlmilogAnalysisConfig型に変換する。
        /// </summary>
        /// <returns></returns>
        public Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisConfig ToModel()
        {
            Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisConfig model = new Rms.Server.Utility.Utility.Models.DtAlmilogAnalysisConfig();
            model.Sid = this.Sid;
            model.DetectorName = this.DetectorName;
            model.IsNormalized = this.IsNormalized;
            model.MinSlopeValue = this.MinSlopeValue;
            model.MiddleSlopeValue = this.MiddleSlopeValue;
            model.MaxSlopeValue = this.MaxSlopeValue;
            model.LowVoltageAreaValue = this.LowVoltageAreaValue;
            model.HighVoltageAreaValue = this.HighVoltageAreaValue;
            model.AreaStandardData = this.AreaStandardData;
            model.CreateDatetime = this.CreateDatetime;
            model.UpdateDatetime = this.UpdateDatetime;
    
            return model;
        }
    }
    
    /// <summary>
    /// DtAlmilogAnalysisConfigのメタデータクラス
    /// </summary>
    public  class DtAlmilogAnalysisConfigModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "DetectorName is required.")]
        [StringLength(16, ErrorMessage = "DetectorName length should be less than 16 symbols.")]
        public string DetectorName { get; set; }
    
        [Required(ErrorMessage = "IsNormalized is required.")]
        public bool IsNormalized { get; set; }
    
        [Required(ErrorMessage = "MinSlopeValue is required.")]
        public double MinSlopeValue { get; set; }
    
        [Required(ErrorMessage = "MiddleSlopeValue is required.")]
        public double MiddleSlopeValue { get; set; }
    
        [Required(ErrorMessage = "MaxSlopeValue is required.")]
        public double MaxSlopeValue { get; set; }
    
        [Required(ErrorMessage = "LowVoltageAreaValue is required.")]
        public int LowVoltageAreaValue { get; set; }
    
        [Required(ErrorMessage = "HighVoltageAreaValue is required.")]
        public int HighVoltageAreaValue { get; set; }
    
        [Required(ErrorMessage = "AreaStandardData is required.")]
        [StringLength(700, ErrorMessage = "AreaStandardData length should be less than 700 symbols.")]
        public string AreaStandardData { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
        [Required(ErrorMessage = "UpdateDatetime is required.")]
        public System.DateTime UpdateDatetime { get; set; }
    
    }
}
