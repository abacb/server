//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Utility.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// DtBloclogAnalysisResultクラス
    /// </summary>
    [ModelMetadataType(typeof(DtBloclogAnalysisResultModelMetaData))]
    public partial class DtBloclogAnalysisResult
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DtBloclogAnalysisResult()
        {
        }
    
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Rms.Server.Utility.Utility.Models.DtBloclogAnalysisResultのインスタンス</param>
        public DtBloclogAnalysisResult(Rms.Server.Utility.Utility.Models.DtBloclogAnalysisResult model)
        {
            this.Sid = model.Sid;
            this.EquipmentUid = model.EquipmentUid;
            this.BloclogMonth = model.BloclogMonth;
            this.DetectorName = model.DetectorName;
            this.DetectorId = model.DetectorId;
            this.GpValue = model.GpValue;
            this.ImageFileName = model.ImageFileName;
            this.FileNameNo = model.FileNameNo;
            this.ShadingResult = model.ShadingResult;
            this.ShadingResultMcv = model.ShadingResultMcv;
            this.ShadingResultScv = model.ShadingResultScv;
            this.ShadingResultMcvSv = model.ShadingResultMcvSv;
            this.ShadingResultScvSv1 = model.ShadingResultScvSv1;
            this.ShadingResultScvSv2 = model.ShadingResultScvSv2;
            this.ImageType = model.ImageType;
            this.ImageSize = model.ImageSize;
            this.IsBillTarget = model.IsBillTarget;
            this.LogFileName = model.LogFileName;
            this.CreateDatetime = model.CreateDatetime;
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたDtBloclogAnalysisResultのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のDtBloclogAnalysisResult</param>
        public void CopyFrom(DtBloclogAnalysisResult entity)
        {
            this.Sid = entity.Sid;
            this.EquipmentUid = entity.EquipmentUid;
            this.BloclogMonth = entity.BloclogMonth;
            this.DetectorName = entity.DetectorName;
            this.DetectorId = entity.DetectorId;
            this.GpValue = entity.GpValue;
            this.ImageFileName = entity.ImageFileName;
            this.FileNameNo = entity.FileNameNo;
            this.ShadingResult = entity.ShadingResult;
            this.ShadingResultMcv = entity.ShadingResultMcv;
            this.ShadingResultScv = entity.ShadingResultScv;
            this.ShadingResultMcvSv = entity.ShadingResultMcvSv;
            this.ShadingResultScvSv1 = entity.ShadingResultScvSv1;
            this.ShadingResultScvSv2 = entity.ShadingResultScvSv2;
            this.ImageType = entity.ImageType;
            this.ImageSize = entity.ImageSize;
            this.IsBillTarget = entity.IsBillTarget;
            this.LogFileName = entity.LogFileName;
            this.CreateDatetime = entity.CreateDatetime;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なRms.Server.Utility.Utility.Models.DtBloclogAnalysisResult型に変換する。
        /// </summary>
        /// <returns></returns>
        public Rms.Server.Utility.Utility.Models.DtBloclogAnalysisResult ToModel()
        {
            Rms.Server.Utility.Utility.Models.DtBloclogAnalysisResult model = new Rms.Server.Utility.Utility.Models.DtBloclogAnalysisResult();
            model.Sid = this.Sid;
            model.EquipmentUid = this.EquipmentUid;
            model.BloclogMonth = this.BloclogMonth;
            model.DetectorName = this.DetectorName;
            model.DetectorId = this.DetectorId;
            model.GpValue = this.GpValue;
            model.ImageFileName = this.ImageFileName;
            model.FileNameNo = this.FileNameNo;
            model.ShadingResult = this.ShadingResult;
            model.ShadingResultMcv = this.ShadingResultMcv;
            model.ShadingResultScv = this.ShadingResultScv;
            model.ShadingResultMcvSv = this.ShadingResultMcvSv;
            model.ShadingResultScvSv1 = this.ShadingResultScvSv1;
            model.ShadingResultScvSv2 = this.ShadingResultScvSv2;
            model.ImageType = this.ImageType;
            model.ImageSize = this.ImageSize;
            model.IsBillTarget = this.IsBillTarget;
            model.LogFileName = this.LogFileName;
            model.CreateDatetime = this.CreateDatetime;
    
            return model;
        }
    }
    
    /// <summary>
    /// DtBloclogAnalysisResultのメタデータクラス
    /// </summary>
    public  class DtBloclogAnalysisResultModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "EquipmentUid is required.")]
        [StringLength(30, ErrorMessage = "EquipmentUid length should be less than 30 symbols.")]
        public string EquipmentUid { get; set; }
    
        [StringLength(6, ErrorMessage = "BloclogMonth length should be less than 6 symbols.")]
        public string BloclogMonth { get; set; }
    
        [StringLength(16, ErrorMessage = "DetectorName length should be less than 16 symbols.")]
        public string DetectorName { get; set; }
    
        [StringLength(64, ErrorMessage = "DetectorId length should be less than 64 symbols.")]
        public string DetectorId { get; set; }
    
        [StringLength(32, ErrorMessage = "ImageFileName length should be less than 32 symbols.")]
        public string ImageFileName { get; set; }
    
        [StringLength(8, ErrorMessage = "ShadingResult length should be less than 8 symbols.")]
        public string ShadingResult { get; set; }
    
        [StringLength(64, ErrorMessage = "LogFileName length should be less than 64 symbols.")]
        public string LogFileName { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
    }
}
