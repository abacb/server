//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Utility.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// DtDeviceクラス
    /// </summary>
    [ModelMetadataType(typeof(DtDeviceModelMetaData))]
    public partial class DtDevice
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DtDevice()
        {
        }
    
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Rms.Server.Utility.Utility.Models.DtDeviceのインスタンス</param>
        public DtDevice(Rms.Server.Utility.Utility.Models.DtDevice model)
        {
            this.Sid = model.Sid;
            this.EquipmentModelSid = model.EquipmentModelSid;
            this.InstallTypeSid = model.InstallTypeSid;
            this.ConnectStatusSid = model.ConnectStatusSid;
            this.EdgeId = model.EdgeId;
            this.EquipmentUid = model.EquipmentUid;
            this.RemoteConnectUid = model.RemoteConnectUid;
            this.RmsSoftVersion = model.RmsSoftVersion;
            this.ConnectStartDatetime = model.ConnectStartDatetime;
            this.ConnectUpdateDatetime = model.ConnectUpdateDatetime;
            this.CreateDatetime = model.CreateDatetime;
            this.UpdateDatetime = model.UpdateDatetime;
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたDtDeviceのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のDtDevice</param>
        public void CopyFrom(DtDevice entity)
        {
            this.Sid = entity.Sid;
            this.EquipmentModelSid = entity.EquipmentModelSid;
            this.InstallTypeSid = entity.InstallTypeSid;
            this.ConnectStatusSid = entity.ConnectStatusSid;
            this.EdgeId = entity.EdgeId;
            this.EquipmentUid = entity.EquipmentUid;
            this.RemoteConnectUid = entity.RemoteConnectUid;
            this.RmsSoftVersion = entity.RmsSoftVersion;
            this.ConnectStartDatetime = entity.ConnectStartDatetime;
            this.ConnectUpdateDatetime = entity.ConnectUpdateDatetime;
            this.CreateDatetime = entity.CreateDatetime;
            this.UpdateDatetime = entity.UpdateDatetime;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なRms.Server.Utility.Utility.Models.DtDevice型に変換する。
        /// </summary>
        /// <returns></returns>
        public Rms.Server.Utility.Utility.Models.DtDevice ToModel()
        {
            Rms.Server.Utility.Utility.Models.DtDevice model = new Rms.Server.Utility.Utility.Models.DtDevice();
            model.Sid = this.Sid;
            model.EquipmentModelSid = this.EquipmentModelSid;
            model.InstallTypeSid = this.InstallTypeSid;
            model.ConnectStatusSid = this.ConnectStatusSid;
            model.EdgeId = this.EdgeId;
            model.EquipmentUid = this.EquipmentUid;
            model.RemoteConnectUid = this.RemoteConnectUid;
            model.RmsSoftVersion = this.RmsSoftVersion;
            model.ConnectStartDatetime = this.ConnectStartDatetime;
            model.ConnectUpdateDatetime = this.ConnectUpdateDatetime;
            model.CreateDatetime = this.CreateDatetime;
            model.UpdateDatetime = this.UpdateDatetime;
    
            return model;
        }
    }
    
    /// <summary>
    /// DtDeviceのメタデータクラス
    /// </summary>
    public  class DtDeviceModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Key]
        [Required(ErrorMessage = "InstallTypeSid is required.")]
        public long InstallTypeSid { get; set; }
    
        [Key]
        [Required(ErrorMessage = "ConnectStatusSid is required.")]
        public long ConnectStatusSid { get; set; }
    
        [Key]
        [Required(ErrorMessage = "EdgeId is required.")]
        public System.Guid EdgeId { get; set; }
    
        [StringLength(30, ErrorMessage = "EquipmentUid length should be less than 30 symbols.")]
        public string EquipmentUid { get; set; }
    
        [StringLength(64, ErrorMessage = "RemoteConnectUid length should be less than 64 symbols.")]
        public string RemoteConnectUid { get; set; }
    
        [StringLength(30, ErrorMessage = "RmsSoftVersion length should be less than 30 symbols.")]
        public string RmsSoftVersion { get; set; }
    
        [Key]
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
        [Key]
        [Required(ErrorMessage = "UpdateDatetime is required.")]
        public System.DateTime UpdateDatetime { get; set; }
    
    }
}
