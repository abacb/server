//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Core.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// MtInstallTypeクラス
    /// </summary>
    [ModelMetadataType(typeof(MtInstallTypeModelMetaData))]
    public partial class MtInstallType
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Utility.Models.Entites.MtInstallTypeのインスタンス</param>
        public MtInstallType(Utility.Models.Entites.MtInstallType model)
        {
            this.Sid = model.Sid;
            this.EquipmentTypeSid = model.EquipmentTypeSid;
            this.Code = model.Code;
            this.Description = model.Description;
            this.CreateDatetime = model.CreateDatetime;
            this.EquipmentTypeS = model.MtEquipmentType == null ?
                null :
                new MtEquipmentType(model.MtEquipmentType);
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたMtInstallTypeのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のMtInstallType</param>
        public void CopyFrom(MtInstallType entity)
        {
            this.Sid = entity.Sid;
            this.EquipmentTypeSid = entity.EquipmentTypeSid;
            this.Code = entity.Code;
            this.Description = entity.Description;
            this.CreateDatetime = entity.CreateDatetime;
            this.EquipmentTypeS = entity.EquipmentTypeS;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.MtInstallType型に変換する。
        /// 各変換メソッド共通部分
        /// </summary>
        /// <returns></returns>
        private Utility.Models.Entites.MtInstallType ToModelCommonPart()
        {
            Utility.Models.Entites.MtInstallType model = new Utility.Models.Entites.MtInstallType();
            model.Sid = this.Sid;
            model.EquipmentTypeSid = this.EquipmentTypeSid;
            model.Code = this.Code;
            model.Description = this.Description;
            model.CreateDatetime = this.CreateDatetime;
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.MtInstallType型に変換する。
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.MtInstallType ToModel()
        {
            Utility.Models.Entites.MtInstallType model = ToModelCommonPart();
            model.MtEquipmentType = this.EquipmentTypeS?.ToParentModel(this.GetType());
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.MtInstallType型に変換する。
        /// 親エンティティとして生成するため、子エンティティの情報はもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.MtInstallType ToParentModel(Type childType)
        {
            Utility.Models.Entites.MtInstallType model = ToModelCommonPart();
            // 親子間の参照無限ループを避けるためにタイプチェック
            model.MtEquipmentType = this.EquipmentTypeS?.ToParentModel(this.GetType());
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.MtInstallType型に変換する。
        /// 子エンティティとして生成するため、親エンティティの情報をもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.MtInstallType ToChildModel(Type parentType)
        {
            Utility.Models.Entites.MtInstallType model = ToModelCommonPart();
            // 親子間の参照無限ループを避けるためにタイプチェック
            if (this.EquipmentTypeS?.GetType() != parentType)
            {
                model.MtEquipmentType = this.EquipmentTypeS?.ToParentModel(this.GetType());
            }
    
            return model;
        }
    }
    
    /// <summary>
    /// MtInstallTypeのメタデータクラス
    /// </summary>
    public  class MtInstallTypeModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "EquipmentTypeSid is required.")]
        public long EquipmentTypeSid { get; set; }
    
        [Required(ErrorMessage = "Code is required.")]
        [StringLength(30, ErrorMessage = "Code length should be less than 30 symbols.")]
        [RegularExpression(Utility.Const.AsciiCodeCharactersReg, ErrorMessage = "Code is only allowed for ASCII code characters.")]
        public string Code { get; set; }
    
        [StringLength(128, ErrorMessage = "Description length should be less than 128 symbols.")]
        public string Description { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
    }
}
