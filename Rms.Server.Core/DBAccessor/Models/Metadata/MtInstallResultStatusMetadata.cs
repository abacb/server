//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Core.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// MtInstallResultStatusクラス
    /// </summary>
    [ModelMetadataType(typeof(MtInstallResultStatusModelMetaData))]
    public partial class MtInstallResultStatus
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Utility.Models.Entites.MtInstallResultStatusのインスタンス</param>
        public MtInstallResultStatus(Utility.Models.Entites.MtInstallResultStatus model)
        {
            this.Sid = model.Sid;
            this.Code = model.Code;
            this.Description = model.Description;
            this.CreateDatetime = model.CreateDatetime;
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたMtInstallResultStatusのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のMtInstallResultStatus</param>
        public void CopyFrom(MtInstallResultStatus entity)
        {
            this.Sid = entity.Sid;
            this.Code = entity.Code;
            this.Description = entity.Description;
            this.CreateDatetime = entity.CreateDatetime;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.MtInstallResultStatus型に変換する。
        /// 各変換メソッド共通部分
        /// </summary>
        /// <returns></returns>
        private Utility.Models.Entites.MtInstallResultStatus ToModelCommonPart()
        {
            Utility.Models.Entites.MtInstallResultStatus model = new Utility.Models.Entites.MtInstallResultStatus();
            model.Sid = this.Sid;
            model.Code = this.Code;
            model.Description = this.Description;
            model.CreateDatetime = this.CreateDatetime;
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.MtInstallResultStatus型に変換する。
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.MtInstallResultStatus ToModel()
        {
            Utility.Models.Entites.MtInstallResultStatus model = ToModelCommonPart();
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.MtInstallResultStatus型に変換する。
        /// 親エンティティとして生成するため、子エンティティの情報はもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.MtInstallResultStatus ToParentModel(Type childType)
        {
            Utility.Models.Entites.MtInstallResultStatus model = ToModelCommonPart();
            // 親子間の参照無限ループを避けるためにタイプチェック
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.MtInstallResultStatus型に変換する。
        /// 子エンティティとして生成するため、親エンティティの情報をもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.MtInstallResultStatus ToChildModel(Type parentType)
        {
            Utility.Models.Entites.MtInstallResultStatus model = ToModelCommonPart();
            // 親子間の参照無限ループを避けるためにタイプチェック
    
            return model;
        }
    }
    
    /// <summary>
    /// MtInstallResultStatusのメタデータクラス
    /// </summary>
    public  class MtInstallResultStatusModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "Code is required.")]
        [StringLength(20, ErrorMessage = "Code length should be less than 20 symbols.")]
        [RegularExpression(Utility.Const.AsciiCodeCharactersReg, ErrorMessage = "Code is only allowed for ASCII code characters.")]
        public string Code { get; set; }
    
        [StringLength(200, ErrorMessage = "Description length should be less than 200 symbols.")]
        public string Description { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
    }
}
