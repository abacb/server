//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Core.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// DtParentChildConnectクラス
    /// </summary>
    [ModelMetadataType(typeof(DtParentChildConnectModelMetaData))]
    public partial class DtParentChildConnect
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DtParentChildConnect()
        {
        }
    
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Utility.Models.Entites.DtParentChildConnectのインスタンス</param>
        public DtParentChildConnect(Utility.Models.Entites.DtParentChildConnect model)
        {
            this.Sid = model.Sid;
            this.ParentDeviceSid = model.ParentDeviceSid;
            this.ChildDeviceSid = model.ChildDeviceSid;
            this.ParentResult = model.ParentResult;
            this.ParentConfirmDatetime = model.ParentConfirmDatetime;
            this.ParentLastConnectDatetime = model.ParentLastConnectDatetime;
            this.ChildResult = model.ChildResult;
            this.ChildConfirmDatetime = model.ChildConfirmDatetime;
            this.ChildLastConnectDatetime = model.ChildLastConnectDatetime;
            this.CreateDatetime = model.CreateDatetime;
            this.UpdateDatetime = model.UpdateDatetime;
            this.ChildDeviceS = model.DtDevice == null ?
                null :
                new DtDevice(model.DtDevice);
            this.ParentDeviceS = model.DtDevice1 == null ?
                null :
                new DtDevice(model.DtDevice1);
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたDtParentChildConnectのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のDtParentChildConnect</param>
        public void CopyFrom(DtParentChildConnect entity)
        {
            this.Sid = entity.Sid;
            this.ParentDeviceSid = entity.ParentDeviceSid;
            this.ChildDeviceSid = entity.ChildDeviceSid;
            this.ParentResult = entity.ParentResult;
            this.ParentConfirmDatetime = entity.ParentConfirmDatetime;
            this.ParentLastConnectDatetime = entity.ParentLastConnectDatetime;
            this.ChildResult = entity.ChildResult;
            this.ChildConfirmDatetime = entity.ChildConfirmDatetime;
            this.ChildLastConnectDatetime = entity.ChildLastConnectDatetime;
            this.CreateDatetime = entity.CreateDatetime;
            this.UpdateDatetime = entity.UpdateDatetime;
            this.ChildDeviceS = entity.ChildDeviceS;
            this.ParentDeviceS = entity.ParentDeviceS;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtParentChildConnect型に変換する。
        /// 各変換メソッド共通部分
        /// </summary>
        /// <returns></returns>
        private Utility.Models.Entites.DtParentChildConnect ToModelCommonPart()
        {
            Utility.Models.Entites.DtParentChildConnect model = new Utility.Models.Entites.DtParentChildConnect();
            model.Sid = this.Sid;
            model.ParentDeviceSid = this.ParentDeviceSid;
            model.ChildDeviceSid = this.ChildDeviceSid;
            model.ParentResult = this.ParentResult;
            model.ParentConfirmDatetime = this.ParentConfirmDatetime;
            model.ParentLastConnectDatetime = this.ParentLastConnectDatetime;
            model.ChildResult = this.ChildResult;
            model.ChildConfirmDatetime = this.ChildConfirmDatetime;
            model.ChildLastConnectDatetime = this.ChildLastConnectDatetime;
            model.CreateDatetime = this.CreateDatetime;
            model.UpdateDatetime = this.UpdateDatetime;
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtParentChildConnect型に変換する。
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.DtParentChildConnect ToModel()
        {
            Utility.Models.Entites.DtParentChildConnect model = ToModelCommonPart();
            model.DtDevice = this.ChildDeviceS?.ToParentModel(this.GetType());
            model.DtDevice1 = this.ParentDeviceS?.ToParentModel(this.GetType());
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtParentChildConnect型に変換する。
        /// 親エンティティとして生成するため、子エンティティの情報はもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.DtParentChildConnect ToParentModel(Type childType)
        {
            Utility.Models.Entites.DtParentChildConnect model = ToModelCommonPart();
            model.DtDevice = this.ChildDeviceS?.ToParentModel(this.GetType());
            model.DtDevice1 = this.ParentDeviceS?.ToParentModel(this.GetType());
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtParentChildConnect型に変換する。
        /// 子エンティティとして生成するため、親エンティティの情報をもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.DtParentChildConnect ToChildModel(Type parentType)
        {
            Utility.Models.Entites.DtParentChildConnect model = ToModelCommonPart();
            // 親子間の参照無限ループを避けるためにタイプチェック
            if (this.ChildDeviceS?.GetType() != parentType)
            {
                model.DtDevice = this.ChildDeviceS?.ToParentModel(this.GetType());
            }
            if (this.ParentDeviceS?.GetType() != parentType)
            {
                model.DtDevice1 = this.ParentDeviceS?.ToParentModel(this.GetType());
            }
    
            return model;
        }
    }
    
    /// <summary>
    /// DtParentChildConnectのメタデータクラス
    /// </summary>
    public  class DtParentChildConnectModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "ParentDeviceSid is required.")]
        public long ParentDeviceSid { get; set; }
    
        [Required(ErrorMessage = "ChildDeviceSid is required.")]
        public long ChildDeviceSid { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
        [Required(ErrorMessage = "UpdateDatetime is required.")]
        public System.DateTime UpdateDatetime { get; set; }
    
    }
}
