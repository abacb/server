//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Core.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// DtDeviceFileAttributeクラス
    /// </summary>
    [ModelMetadataType(typeof(DtDeviceFileAttributeModelMetaData))]
    public partial class DtDeviceFileAttribute
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DtDeviceFileAttribute()
        {
        }
    
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Utility.Models.Entites.DtDeviceFileAttributeのインスタンス</param>
        public DtDeviceFileAttribute(Utility.Models.Entites.DtDeviceFileAttribute model)
        {
            this.Sid = model.Sid;
            this.DeviceFileSid = model.DeviceFileSid;
            this.Name = model.Name;
            this.Value = model.Value;
            this.CreateDatetime = model.CreateDatetime;
            this.UpdateDatetime = model.UpdateDatetime;
            this.DeviceFileS = model.DtDeviceFile == null ?
                null :
                new DtDeviceFile(model.DtDeviceFile);
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたDtDeviceFileAttributeのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のDtDeviceFileAttribute</param>
        public void CopyFrom(DtDeviceFileAttribute entity)
        {
            this.Sid = entity.Sid;
            this.DeviceFileSid = entity.DeviceFileSid;
            this.Name = entity.Name;
            this.Value = entity.Value;
            this.CreateDatetime = entity.CreateDatetime;
            this.UpdateDatetime = entity.UpdateDatetime;
            this.DeviceFileS = entity.DeviceFileS;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtDeviceFileAttribute型に変換する。
        /// 各変換メソッド共通部分
        /// </summary>
        /// <returns></returns>
        private Utility.Models.Entites.DtDeviceFileAttribute ToModelCommonPart()
        {
            Utility.Models.Entites.DtDeviceFileAttribute model = new Utility.Models.Entites.DtDeviceFileAttribute();
            model.Sid = this.Sid;
            model.DeviceFileSid = this.DeviceFileSid;
            model.Name = this.Name;
            model.Value = this.Value;
            model.CreateDatetime = this.CreateDatetime;
            model.UpdateDatetime = this.UpdateDatetime;
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtDeviceFileAttribute型に変換する。
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.DtDeviceFileAttribute ToModel()
        {
            Utility.Models.Entites.DtDeviceFileAttribute model = ToModelCommonPart();
            model.DtDeviceFile = this.DeviceFileS?.ToParentModel(this.GetType());
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtDeviceFileAttribute型に変換する。
        /// 親エンティティとして生成するため、子エンティティの情報はもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.DtDeviceFileAttribute ToParentModel(Type childType)
        {
            Utility.Models.Entites.DtDeviceFileAttribute model = ToModelCommonPart();
            model.DtDeviceFile = this.DeviceFileS?.ToParentModel(this.GetType());
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtDeviceFileAttribute型に変換する。
        /// 子エンティティとして生成するため、親エンティティの情報をもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.DtDeviceFileAttribute ToChildModel(Type parentType)
        {
            Utility.Models.Entites.DtDeviceFileAttribute model = ToModelCommonPart();
            // 親子間の参照無限ループを避けるためにタイプチェック
            if (this.DeviceFileS?.GetType() != parentType)
            {
                model.DtDeviceFile = this.DeviceFileS?.ToParentModel(this.GetType());
            }
    
            return model;
        }
    }
    
    /// <summary>
    /// DtDeviceFileAttributeのメタデータクラス
    /// </summary>
    public  class DtDeviceFileAttributeModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "DeviceFileSid is required.")]
        public long DeviceFileSid { get; set; }
    
        [StringLength(256, ErrorMessage = "Name length should be less than 256 symbols.")]
        public string Name { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
        [Required(ErrorMessage = "UpdateDatetime is required.")]
        public System.DateTime UpdateDatetime { get; set; }
    
    }
}
