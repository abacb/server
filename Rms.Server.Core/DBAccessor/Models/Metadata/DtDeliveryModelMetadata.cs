//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはテンプレートから生成されました。
//
//     このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//     このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rms.Server.Core.DBAccessor.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using Microsoft.AspNetCore.Mvc;
    
    /// <summary>
    /// DtDeliveryModelクラス
    /// </summary>
    [ModelMetadataType(typeof(DtDeliveryModelModelMetaData))]
    public partial class DtDeliveryModel
    {
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public DtDeliveryModel()
        {
        }
    
        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <param name="model">Utility.Models.Entites.DtDeliveryModelのインスタンス</param>
        public DtDeliveryModel(Utility.Models.Entites.DtDeliveryModel model)
        {
            this.Sid = model.Sid;
            this.DeliveryFileSid = model.DeliveryFileSid;
            this.EquipmentModelSid = model.EquipmentModelSid;
            this.CreateDatetime = model.CreateDatetime;
            this.DeliveryFileS = model.DtDeliveryFile == null ?
                null :
                new DtDeliveryFile(model.DtDeliveryFile);
            this.EquipmentModelS = model.MtEquipmentModel == null ?
                null :
                new MtEquipmentModel(model.MtEquipmentModel);
        }
    
        /// <summary>
        /// このインスタンスの各プロパティに、引数に指定されたDtDeliveryModelのプロパティの値をコピーする
        /// </summary>
        /// <param name="entity">コピー元のDtDeliveryModel</param>
        public void CopyFrom(DtDeliveryModel entity)
        {
            this.Sid = entity.Sid;
            this.DeliveryFileSid = entity.DeliveryFileSid;
            this.EquipmentModelSid = entity.EquipmentModelSid;
            this.CreateDatetime = entity.CreateDatetime;
            this.DeliveryFileS = entity.DeliveryFileS;
            this.EquipmentModelS = entity.EquipmentModelS;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtDeliveryModel型に変換する。
        /// 各変換メソッド共通部分
        /// </summary>
        /// <returns></returns>
        private Utility.Models.Entites.DtDeliveryModel ToModelCommonPart()
        {
            Utility.Models.Entites.DtDeliveryModel model = new Utility.Models.Entites.DtDeliveryModel();
            model.Sid = this.Sid;
            model.DeliveryFileSid = this.DeliveryFileSid;
            model.EquipmentModelSid = this.EquipmentModelSid;
            model.CreateDatetime = this.CreateDatetime;
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtDeliveryModel型に変換する。
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.DtDeliveryModel ToModel()
        {
            Utility.Models.Entites.DtDeliveryModel model = ToModelCommonPart();
            model.DtDeliveryFile = this.DeliveryFileS?.ToParentModel(this.GetType());
            model.MtEquipmentModel = this.EquipmentModelS?.ToParentModel(this.GetType());
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtDeliveryModel型に変換する。
        /// 親エンティティとして生成するため、子エンティティの情報はもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.DtDeliveryModel ToParentModel(Type childType)
        {
            Utility.Models.Entites.DtDeliveryModel model = ToModelCommonPart();
            model.DtDeliveryFile = this.DeliveryFileS?.ToParentModel(this.GetType());
            model.MtEquipmentModel = this.EquipmentModelS?.ToParentModel(this.GetType());
    
            return model;
        }
    
        /// <summary>
        /// このインスタンスを、それと同等なUtility.Models.Entites.DtDeliveryModel型に変換する。
        /// 子エンティティとして生成するため、親エンティティの情報をもたない
        /// </summary>
        /// <returns></returns>
        public Utility.Models.Entites.DtDeliveryModel ToChildModel(Type parentType)
        {
            Utility.Models.Entites.DtDeliveryModel model = ToModelCommonPart();
            // 親子間の参照無限ループを避けるためにタイプチェック
            if (this.DeliveryFileS?.GetType() != parentType)
            {
                model.DtDeliveryFile = this.DeliveryFileS?.ToParentModel(this.GetType());
            }
            if (this.EquipmentModelS?.GetType() != parentType)
            {
                model.MtEquipmentModel = this.EquipmentModelS?.ToParentModel(this.GetType());
            }
    
            return model;
        }
    }
    
    /// <summary>
    /// DtDeliveryModelのメタデータクラス
    /// </summary>
    public  class DtDeliveryModelModelMetaData
    {
        [Key]
        [Required(ErrorMessage = "Sid is required.")]
        public long Sid { get; set; }
    
        [Required(ErrorMessage = "DeliveryFileSid is required.")]
        public long DeliveryFileSid { get; set; }
    
        [Required(ErrorMessage = "EquipmentModelSid is required.")]
        public long EquipmentModelSid { get; set; }
    
        [Required(ErrorMessage = "CreateDatetime is required.")]
        public System.DateTime CreateDatetime { get; set; }
    
    }
}
